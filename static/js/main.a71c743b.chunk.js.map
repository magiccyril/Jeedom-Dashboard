{"version":3,"sources":["components/LaunchScreen/loader.svg","components/Summary/sun.svg","components/Summary/rain.svg","components/Summary/light.svg","redux/utils/storage.js","redux/utils/jeedom.js","redux/modules/settingsForm.js","redux/modules/launchScreen.js","redux/modules/snackbar.js","redux/modules/settings.js","constants/equipments.js","redux/modules/summary.js","redux/modules/room.js","redux/modules/camera.js","constants/commands.js","redux/modules/light.js","redux/modules/door.js","redux/modules/mode.js","redux/modules/thermostat.js","redux/configureStore.js","containers/SettingsForm/SettingsForm.js","components/LaunchScreen/LaunchScreen.js","components/Pill/Pill.js","components/Summary/Summary.js","components/Header/Header.js","components/Card/Card.js","components/CardCamera/CardCamera.js","components/Backdrop/Backdrop.js","components/BackdropDoorHistory/BackdropDoorHistory.js","components/utils.js","components/CardCameraGarage/CardCameraGarage.js","components/CardDoor/CardDoor.js","components/CardLights/CardLights.js","components/CardMode/CardMode.js","components/CardThermostat/CardThermostat.js","containers/CardList/CardList.js","components/Room/Room.js","components/RoomList/RoomList.js","components/BackdropSettings/BackdropSettings.js","components/Snackbar/Snackbar.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","setStorageSettings","settings","Promise","resolve","reject","localStorage","setItem","url","apikey","e","getStorageSettings","getItem","JEE_API","getRandomInt","Math","floor","random","getJeedomVersion","payload","options","method","body","JSON","stringify","fetch","then","response","json","getJeedomEquipment","equipmentId","result","getJeedomRooms","execJeedomCmd","id","requestOptions","getJeedomCommand","getJeedomCommandHistory","saga","settingsFormSaveSaga","SETTINGS_FORM_SAVE_REQUESTED","SETTINGS_FORM_CHECK_FAILED","SETTINGS_FORM_SAVE_SUCCEEDED","SETTINGS_FORM_SAVE_FAILED","initialState","checkFailed","saveRequested","saveFailed","takeLatest","action","call","error","Error","message","put","type","onSuccess","appLaunchSaga","settingsFormSaveSucceededSaga","APP_LAUNCH_REQUESTED","APP_LAUNCH_SUCCEEDED","APP_LAUNCH_FAILED","show","showSetup","appLaunchSucceeded","takeEvery","snackbarSaga","SHOW_SNACKBAR_DELAY","SNACKBAR_SHOW","SNACKBAR_HIDE","text","showErrorSnackbar","delay","settingsFormSucceededSaga","SETTINGS_SHOW","SETTINGS_HIDE","SETTINGS_FORM_SUCCEEDED","hideSettings","SUMMARY_ID","ALL_LIGHT_STATUS_ID","summaryIntervalRegistrationSaga","summaryRequestSaga","SUMMARY_INTERVAL_REGISTRATION","SUMMARY_REQUESTED","SUMMARY_LOADED","SUMMARY_ERRORED","homeTemperature","outsideTemperature","outsideRain","summaryRequested","summaryLoaded","roomRequestSaga","ROOM_REQUESTED","ROOM_LOADED","ROOM_ERRORED","loading","list","roomsLoaded","cameraImageRequestSaga","CAMERA_IMAGE_REQUESTED","CAMERA_IMAGE_LOADED","CAMERA_IMAGE_ERRORED","cameraImageLoaded","cameraId","imageUrl","equipment","undefined","cameraUrl","cmds","find","el","generic_type","TypeError","currentValue","ALL_LIGHT_OFF_CMD","lightStatusRequestSaga","lightAllOffRequestSaga","LIGHT_ALL_STATUS_REQUESTED","LIGHT_ALL_STATUS_LOADED","LIGHT_ALL_STATUS_ERRORED","LIGHT_ALL_OFF_REQUESTED","lights","allLightStatusRequested","allLightStatusLoaded","doorStatusWithHistoryRequestSaga","doorStatusRequestSaga","doorHistoryRequestSaga","DOOR_STATUS_WITH_HISTORY_REQUESTED","DOOR_STATUS_REQUESTED","DOOR_STATUS_LOADED","DOOR_STATUS_ERRORED","DOOR_HISTORY_REQUESTED","DOOR_HISTORY_LOADED","DOOR_HISTORY_ERRORED","DOOR_HISTORY_SHOW","DOOR_HISTORY_HIDE","doorStatusErrored","doorHistoryRequested","doorHistoryErrored","putResolve","command","history","historyPayload","modeListRequestSaga","modeChangeRequestSaga","REFRESH_DELAY","MODE_LIST_REQUESTED","MODE_LIST_LOADED","MODE_LIST_ERRORED","MODE_CHANGE_REQUESTED","MODE_CHANGE_SUCCEEDED","MODE_CHANGE_ERRORED","modeListRequested","modeListLoaded","modeListErrored","cmd","thermostatRequestSaga","THERMOSTAT_REQUESTED","THERMOSTAT_LOADED","THERMOSTAT_ERRORED","THERMOSTAT_MODE_CHANGE_REQUESTED","thermostatLoaded","thermostat","thermostatId","thermostatName","name","availableModes","filter","isVisible","thermostatModes","forEach","mode","currentMode","logicalId","thermostatCurrentMode","Object","keys","key","thermostatPower","thermostatTemperature","thermostatSetPoint","modes","power","temperature","setpoint","thermostatErrored","rootSaga","sagaMiddleware","createSagaMiddleware","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","launchScreen","state","settingsForm","snackbar","summary","light","parseFloat","toFixed","room","map","camera","label","singularComplement","display","parameters","push","order","value","door","statusPayload","open","event","datetime","DateTime","fromFormat","sort","a","b","diff","showHistory","currentModeValue","loadedThermostat","spawn","launchScreenSaga","settingsFormSaga","settingsSaga","snackBarSaga","summarySaga","roomSaga","cameraSaga","lightSaga","doorSaga","modeSaga","thermostatSaga","store","createStore","applyMiddleware","run","SettingsForm","handleChange","bind","handleSubmit","setState","this","target","preventDefault","props","saveSettingsForm","errorCheck","className","role","errorSave","button","disabled","onSubmit","htmlFor","onChange","Component","connect","LaunchScreen","loader","src","loaderSvg","width","alt","Pill","pillImageUrl","image","pillImage","pillImgStyle","backgroundImage","pillClassName","join","style","Summary","outsideImage","imgRain","imgSun","imgLight","Header","collapsedClassName","collapsed","href","onClick","onShowSettings","Card","cssClass","backgroundUrl","backgroundSize","imgTop","imgBottom","overlay","hasChildren","children","title","CardCamera","time","Date","now","cameraImage","Backdrop","handleClose","setTimeout","onClose","formatHistoryListItem","element","i","badgeClassName","toFormat","BackdropDoorHistory","historyList","slice","formatDoorDate","object","status","length","diffNow","negate","CardCameraGarage","onHistoryClick","onHistoryBackdropClose","CardDoor","CardLights","lightsOn","reduce","labels","item","onRetry","onOffClick","CardMode","parsePropMode","propString","split","onModeClick","aria-label","CardThermostat","modesCount","entries","datalistOptions","optionSize","currentModeIndex","getOwnPropertyNames","indexOf","min","max","step","defaultValue","modeId","onModeChange","CardList","handleHouseModeRetry","handleLightStatusRetry","getAllLightStatus","getDoorStatusHistory","getCameraImage","getMode","getThermostat","modeState","formatModeToProps","handleLightOffClick","garageCameraImage","garageDoor","handleDoorHistoryClick","handleHistoryBackdropClose","enrtyDoor","livingCameraImage","houseMode","getCurrentMode","getModes","handleChangeMode","livingThermostat","handleThermostatModeChange","mapDispatchToProps","Room","RoomList","getRooms","empty","rooms","BackdropSettings","Snackbar","App","collapsedHeader","handleScroll","threshold","getComputedStyle","document","documentElement","fontSize","scrollY","addEventListener","appLaunchRequested","setSummaryIntervalRegistration","removeEventListener","handleLaunchScreenSetupSuccess","handleShowSettings","showSettingsBackdrop","handleCloseSettings","handleSettingsBackdropFormSuccess","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a71c743b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.27e2ef14.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.3b2f1925.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.5804a26e.svg\";","module.exports = __webpack_public_path__ + \"static/media/light.9eee2013.svg\";","export function setStorageSettings(settings) {\n  return new Promise((resolve, reject) => {\n    try {\n      localStorage.setItem('url', settings.url);\n      localStorage.setItem('apikey', settings.apikey);\n\n      resolve();\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nexport function getStorageSettings() {\n  return new Promise((resolve, reject) => {\n    try {\n      const url = localStorage.getItem('url');\n      const apikey = localStorage.getItem('apikey');\n\n      resolve({ url, apikey });\n    } catch (e) {\n      reject(e);\n    }\n  });\n}","import { getStorageSettings } from './storage';\n\nconst JEE_API = 'core/api/jeeApi.php';\n\nfunction getRandomInt() {\n  return Math.floor(Math.random() * Math.floor(100));\n}\n\nexport function getJeedomVersion(payload) {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      'jsonrpc': '2.0',\n      'id': getRandomInt(),\n      'method': 'version',\n      'params': {\n        'apikey': payload.apikey,\n      }\n    })\n  };\n\n  return fetch(payload.url + JEE_API, options)\n    .then(response => response.json())\n}\n\nexport function getJeedomEquipment(equipmentId) {\n  return getStorageSettings()\n    .then((settings) => {\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({\n          'jsonrpc': '2.0',\n          'id': getRandomInt(),\n          'method': 'eqLogic::fullById',\n          'params': {\n            'apikey': settings.apikey,\n            'id': equipmentId,\n          }\n        })};\n      const url = settings.url + JEE_API;\n      return fetch(url, options)\n    })\n    .then(response => response.json())\n    .then(response => response.result) \n}\n\nexport function getJeedomRooms() {\n  return getStorageSettings()\n    .then((settings) => {\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({\n          'jsonrpc': '2.0',\n          'id': getRandomInt(),\n          'method': 'object::all',\n          'params': {\n            'apikey': settings.apikey\n          }\n        })};\n      const url = settings.url + JEE_API;\n      return fetch(url, options)\n    })\n    .then(response => response.json())\n    .then(response => response.result)\n}\n\nexport function execJeedomCmd(id, options = {}) {\n  return getStorageSettings()\n    .then((settings) => {\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          'jsonrpc': '2.0',\n          'id': getRandomInt(),\n          'method': 'cmd::execCmd',\n          'params': {\n            'apikey': settings.apikey,\n            'id': id,\n            'options': options,\n          }\n        })};\n      const url = settings.url + JEE_API;\n      return fetch(url, requestOptions)\n    })\n    .then(response => response.json())\n    .then(response => response.result)  \n}\n\nexport function getJeedomCommand(id) {\n  return getStorageSettings()\n    .then((settings) => {\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          'jsonrpc': '2.0',\n          'id': getRandomInt(),\n          'method': 'cmd::byId',\n          'params': {\n            'apikey': settings.apikey,\n            'id': id,\n          }\n        })};\n      const url = settings.url + JEE_API;\n      return fetch(url, requestOptions)\n    })\n    .then(response => response.json())\n    .then(response => response.result)  \n}\n\nexport function getJeedomCommandHistory(id) {\n  return getStorageSettings()\n    .then((settings) => {\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          'jsonrpc': '2.0',\n          'id': getRandomInt(),\n          'method': 'cmd::getHistory',\n          'params': {\n            'apikey': settings.apikey,\n            'id': id,\n          }\n        })};\n      const url = settings.url + JEE_API;\n      return fetch(url, requestOptions)\n    })\n    .then(response => response.json())\n    .then(response => response.result)  \n}","import { takeLatest, call, put } from 'redux-saga/effects';\nimport { getJeedomVersion } from '../utils/jeedom';\nimport { setStorageSettings } from '../utils/storage';\n\n// Actions\nexport const SETTINGS_FORM_SAVE_REQUESTED = 'SETTINGS_FORM_SAVE_REQUESTED';\nexport const SETTINGS_FORM_CHECK_FAILED = 'SETTINGS_FORM_CHECK_FAILED';\nexport const SETTINGS_FORM_SAVE_SUCCEEDED = 'SETTINGS_FORM_SAVE_SUCCEEDED';\nexport const SETTINGS_FORM_SAVE_FAILED = 'SETTINGS_FORM_SAVE_FAILED';\n\n// Reducer\nconst initialState = {\n  checkFailed: false,\n  saveRequested: false,\n  saveFailed: false,\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SETTINGS_FORM_SAVE_REQUESTED:\n      return { checkFailed: false, saveRequested: true, saveFailed: false };\n\n    case SETTINGS_FORM_CHECK_FAILED:\n      return { checkFailed: true, saveRequested: false, saveFailed: false }\n\n    case SETTINGS_FORM_SAVE_FAILED:\n      return { checkFailed: false, saveRequested: false, saveFailed: true }\n\n    case SETTINGS_FORM_SAVE_SUCCEEDED:\n      return { checkFailed: false, saveRequested: false, saveFailed: false }\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function saveSettingsForm(payload) {\n  return { type: SETTINGS_FORM_SAVE_REQUESTED, payload}\n}\nexport function checkSettingsFormFailed() {\n  return { type: SETTINGS_FORM_CHECK_FAILED }\n}\nexport function saveSettingsFormSucceeded(payload) {\n  return { type: SETTINGS_FORM_SAVE_SUCCEEDED, payload }\n}\nexport function saveSettingsFormFailed() {\n  return { type: SETTINGS_FORM_SAVE_FAILED }\n}\n\n\n// Side effects\nexport function* saga() {\n  yield takeLatest(SETTINGS_FORM_SAVE_REQUESTED, settingsFormSaveSaga);\n}\n\nfunction* settingsFormSaveSaga(action) {\n  try {\n    const response = yield call(getJeedomVersion, action.payload);\n\n    if (response.error) {\n      throw new Error(response.error.message);\n    }\n  } catch (e) {\n    yield put(checkSettingsFormFailed(e))\n    return;\n  }\n\n  try {\n    yield call(setStorageSettings, action.payload);\n    yield put(saveSettingsFormSucceeded(action.payload));\n\n    if (action.payload.onSuccess) {\n      yield put(action.payload.onSuccess());\n    }\n  } catch (e) {\n    yield put(saveSettingsFormFailed(e))\n  }\n}","import { takeEvery, takeLatest, call, put } from 'redux-saga/effects';\nimport { getJeedomVersion } from '../utils/jeedom';\nimport { getStorageSettings } from '../utils/storage';\nimport { SETTINGS_FORM_SAVE_SUCCEEDED } from './settingsForm';\n\n// Actions\nexport const APP_LAUNCH_REQUESTED = 'APP_LAUNCH_REQUESTED';\nexport const APP_LAUNCH_SUCCEEDED = 'APP_LAUNCH_SUCCEEDED';\nexport const APP_LAUNCH_FAILED = 'APP_LAUNCH_FAILED';\n\n// Reducer\nconst initialState = {\n  show: true,\n  showSetup: false,\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case APP_LAUNCH_FAILED:\n      return { show: true, showSetup: true }\n      \n    case APP_LAUNCH_SUCCEEDED:\n      return { show: false, showSetup: false };\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function appLaunchRequested() {\n  return { type: APP_LAUNCH_REQUESTED };\n}\nexport function appLaunchSucceeded() {\n  return { type: APP_LAUNCH_SUCCEEDED };\n}\nexport function appLaunchFailed() {\n  return { type: APP_LAUNCH_FAILED };\n}\n\n// Side effects\nexport function* saga() {\n  yield takeLatest(APP_LAUNCH_REQUESTED, appLaunchSaga);\n  yield takeEvery(SETTINGS_FORM_SAVE_SUCCEEDED, settingsFormSaveSucceededSaga);\n}\n\nfunction* appLaunchSaga() {\n  try {\n    const settings = yield call(getStorageSettings);\n\n    if (!settings.url || !settings.apikey) {\n      throw new Error('Settings undefined');\n    }\n\n    const response = yield call(getJeedomVersion, settings);\n    if (response.error) {\n      throw new Error(response.error.message);\n    }\n\n    yield put(appLaunchSucceeded());\n  } catch (e) {\n    yield put(appLaunchFailed(e))\n    return;\n  }\n}\n\nfunction* settingsFormSaveSucceededSaga() {\n  yield put(appLaunchSucceeded());\n}","import { takeLatest, put, delay } from 'redux-saga/effects';\n\nconst SHOW_SNACKBAR_DELAY = 10 * 1000;\nconst DEFAULT_TYPE = 'success';\n\n// Actions\nconst SNACKBAR_SHOW = 'SNACKBAR_SHOW';\nconst SNACKBAR_HIDE = 'SNACKBAR_HIDE';\n\n// Reducer\nconst initialState = {\n  text: '',\n  type: 'success',\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SNACKBAR_SHOW:\n      return { text: action.payload.text, type: action.payload.type }\n\n    case SNACKBAR_HIDE:\n      return { text: '' }\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function showSnackbar(text) {\n  return { type: SNACKBAR_SHOW, payload: {\n    text: text,\n    type:  DEFAULT_TYPE,\n  }};\n}\nexport function showSuccessSnackbar(text) {\n  return { type: SNACKBAR_SHOW, payload: {\n    text: text,\n    type: 'success',\n  }};\n}\nexport function showWarningSnackbar(text) {\n  return { type: SNACKBAR_SHOW, payload: {\n    text: text,\n    type: 'warning',\n  }};\n}\nexport function showErrorSnackbar(text) {\n  return { type: SNACKBAR_SHOW, payload: {\n    text: text,\n    type: 'danger',\n  }};\n}\nexport function hideSnackbar() {\n  return { type: SNACKBAR_HIDE };\n}\n\n// Side effects\nexport function* saga() {\n  yield takeLatest(SNACKBAR_SHOW, snackbarSaga);\n}\n\nfunction* snackbarSaga() {\n  yield delay(SHOW_SNACKBAR_DELAY);\n  yield put(hideSnackbar())\n}","import { takeEvery, put } from 'redux-saga/effects';\nimport { showSuccessSnackbar } from './snackbar';\n\n// Actions\nexport const SETTINGS_SHOW = 'SETTINGS_SHOW';\nexport const SETTINGS_HIDE = 'SETTINGS_HIDE';\nexport const SETTINGS_FORM_SUCCEEDED = 'SETTINGS_FORM_SUCCEEDED';\n\n// Reducer\nconst initialState = {\n  show: false,\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SETTINGS_SHOW:\n      return { show: true, checkFailed: false, saveRequested: false, saveFailed: false };\n\n    case SETTINGS_HIDE:\n      return { show: false, checkFailed: false, saveRequested: false, saveFailed: false };\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function showSettings(e) {\n  if (e) {\n    e.preventDefault();\n  }\n  return { type: SETTINGS_SHOW };\n}\nexport function hideSettings() {\n  return { type: SETTINGS_HIDE };\n}\nexport function settingsFormSucceeded() {\n  return { type: SETTINGS_FORM_SUCCEEDED };\n}\n\n// Side effects\nexport function* saga() {\n  yield takeEvery(SETTINGS_FORM_SUCCEEDED, settingsFormSucceededSaga);\n}\n\nfunction* settingsFormSucceededSaga() {\n  yield put(hideSettings());\n  yield put(showSuccessSnackbar('Paramètres enregistrés !'));\n}","export const SUMMARY_ID = 185;\nexport const GARAGE_CAMERA_ID = 56;\nexport const LIVING_CAMERA_ID = 52;\nexport const LIVING_THERMOSTAT_ID = 48;\nexport const ALL_LIGHT_STATUS_ID = 190; \nexport const HOUSE_MODE_ID = 80;\n","import { takeEvery, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { getJeedomEquipment } from '../utils/jeedom';\n\nimport { SUMMARY_ID } from '../../constants/equipments';\n\n// Actions\nexport const SUMMARY_INTERVAL_REGISTRATION = 'SUMMARY_INTERVAL_REGISTRATION';\nexport const SUMMARY_REQUESTED = 'SUMMARY_REQUESTED';\nexport const SUMMARY_LOADED = 'SUMMARY_LOADED';\nexport const SUMMARY_ERRORED = 'SUMMARY_ERRORED';\n\n// Reducer\nconst initialState = {\n  homeTemperature: '-',\n  outsideTemperature: '-',\n  outsideRain: '-',\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SUMMARY_LOADED:\n      const cmds = action.payload.cmds;\n\n      const homeTemperature = cmds.find(el => (el.name === 'temp-home'));\n      const outsideTemperature = cmds.find(el => (el.name === 'temp-outside'));\n      const outsideRain = cmds.find(el => (el.name === 'rain'));\n      const light = cmds.find(el => (el.name === 'light'));\n\n      return {\n        homeTemperature: homeTemperature ? parseFloat(homeTemperature.currentValue).toFixed(1) : '-',\n        outsideTemperature: outsideTemperature ? outsideTemperature.currentValue : '-',\n        outsideRain: outsideRain ? outsideRain.currentValue : '-',\n        light: light.currentValue,\n      };\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function setSummaryIntervalRegistration() {\n  return { type: SUMMARY_INTERVAL_REGISTRATION }\n}\nexport function summaryRequested() {\n  return { type: SUMMARY_REQUESTED }\n}\nexport function summaryLoaded(payload) {\n  return { type: SUMMARY_LOADED, payload }\n}\nexport function summaryErrored(e) {\n  return { type: SUMMARY_ERRORED, payload: e };\n}\n\n// Side effects\nexport function* saga() {\n  yield takeEvery(SUMMARY_REQUESTED, summaryRequestSaga);\n  yield takeLatest(SUMMARY_INTERVAL_REGISTRATION, summaryIntervalRegistrationSaga);\n}\n\nfunction* summaryIntervalRegistrationSaga() {\n  while(true) {\n    yield put(summaryRequested())\n    yield delay(60 * 1000);\n  }\n}\n\nfunction* summaryRequestSaga() {\n  try {\n    const payload = yield call(getJeedomEquipment, SUMMARY_ID);\n    yield put(summaryLoaded(payload));\n  } catch (e) {\n    yield put(summaryErrored(e));\n  }\n}","import { takeEvery, call, put } from 'redux-saga/effects';\nimport { getJeedomRooms } from '../utils/jeedom';\n\n// Actions\nexport const ROOM_REQUESTED = 'ROOM_REQUESTED';\nexport const ROOM_LOADED = 'ROOM_LOADED';\nexport const ROOM_ERRORED = 'ROOM_ERRORED';\n\n// Reducer\nconst initialState = {\n  loading: false,\n  error: false,\n  list: [],\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ROOM_REQUESTED:\n      return {\n        loading: true,\n        error: false,\n        list: [],\n      };\n    case ROOM_LOADED:\n      return {\n        loading: false,\n        error: false,\n        list: action.payload.map(room => {\n          return {id: room.id, name: room.name}\n        }),\n      };\n    case ROOM_ERRORED:\n      return {\n        loading: false,\n        error: true,\n        list: [],\n    };\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function roomsRequested() {\n  return { type: ROOM_REQUESTED };\n}\nexport function roomsLoaded(payload) {\n  return { type: ROOM_LOADED, payload }\n}\nexport function roomsErrored(e) {\n  return { type: ROOM_ERRORED, payload: e };\n}\n\n// Side effects\nexport function* saga() {\n  yield takeEvery(ROOM_REQUESTED, roomRequestSaga);\n}\n\nfunction* roomRequestSaga() {\n  try {\n    const payload = yield call(getJeedomRooms);\n    yield put(roomsLoaded(payload));\n  } catch (e) {\n    yield put(roomsErrored(e));\n  }\n}","import { takeEvery, call, put } from 'redux-saga/effects';\nimport { getJeedomEquipment } from '../utils/jeedom';\nimport { getStorageSettings } from '../utils/storage';\n\n// Actions\nexport const CAMERA_IMAGE_REQUESTED = 'CAMERA_IMAGE_REQUESTED';\nexport const CAMERA_IMAGE_LOADED = 'CAMERA_IMAGE_LOADED';\nexport const CAMERA_IMAGE_ERRORED = 'CAMERA_IMAGE_ERRORED';\n\n// Reducer\nconst initialState = {};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case CAMERA_IMAGE_LOADED:\n      const cameraId = action.payload.cameraId;\n      const imageUrl = action.payload.imageUrl;\n\n      if (!cameraId || !imageUrl) {\n        return { ...state };\n      }\n\n      return {\n        ...state,\n        [cameraId]: imageUrl,\n      };\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function cameraImageRequested(cameraId) {\n  return { type: CAMERA_IMAGE_REQUESTED, cameraId: cameraId}\n}\nexport function cameraImageLoaded(cameraId, imageUrl) {\n  return { type: CAMERA_IMAGE_LOADED, payload: { cameraId, imageUrl } }\n}\nexport function cameraImageErrored(e) {\n  return { type: CAMERA_IMAGE_ERRORED, error: e };\n}\n\n// Side effects\nexport function* saga() {\n  yield takeEvery(CAMERA_IMAGE_REQUESTED, cameraImageRequestSaga);\n}\n\nexport function* cameraImageRequestSaga(action) {\n  try {\n    const cameraId = action.cameraId;\n\n    const settings = yield call(getStorageSettings);\n    const equipment = yield call(getJeedomEquipment, cameraId);\n\n    const cameraUrl = equipment.cmds.find(el => (\n      el.generic_type === 'CAMERA_URL'\n    ));\n    \n    if (cameraUrl === undefined) {\n      throw new TypeError('Camera not detected');\n    }\n\n    yield put(cameraImageLoaded(cameraId, settings.url + cameraUrl.currentValue));\n  } catch (e) {\n    yield put(cameraImageErrored(e));\n  }\n}\n","export const ALL_LIGHT_OFF_CMD = 1094;\nexport const GARAGE_DOOR_CMD = 2144;\nexport const ENTRY_DOOR_CMD = 2147;","import { takeEvery, call, put, delay } from 'redux-saga/effects';\nimport { getJeedomEquipment, execJeedomCmd } from '../utils/jeedom';\n\nimport { ALL_LIGHT_OFF_CMD } from '../../constants/commands';\nimport { ALL_LIGHT_STATUS_ID } from '../../constants/equipments';\nimport { showErrorSnackbar } from './snackbar';\nimport { summaryRequested } from './summary';\n\n// Actions\nexport const LIGHT_ALL_STATUS_REQUESTED = 'LIGHT_ALL_STATUS_REQUESTED';\nexport const LIGHT_ALL_STATUS_LOADED = 'LIGHT_ALL_STATUS_LOADED';\nexport const LIGHT_ALL_STATUS_ERRORED = 'LIGHT_ALL_STATUS_ERRORED';\nexport const LIGHT_ALL_OFF_REQUESTED = 'LIGHT_ALL_OFF_REQUESTED';\n\n// Reducer\nconst initialState = {\n  loading: false,\n  error: false,\n  lights: [],\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case LIGHT_ALL_STATUS_REQUESTED:\n      return {\n        loading: true,\n        error: false,\n        lights: [],\n      };\n\n    case LIGHT_ALL_STATUS_ERRORED:\n      return {\n        loading: false,\n        error: true,\n        lights: [],\n      };\n    \n    case LIGHT_ALL_STATUS_LOADED:\n      const cmds = action.payload.cmds;\n\n      let lights = [];\n      cmds.forEach(cmd => {\n        if (cmd.isVisible === '1' && cmd.logicalId !== 'refresh') {\n          let label = cmd.name;\n          let singularComplement = 'de la';\n          if (cmd.display.parameters\n            && cmd.display.parameters.label\n            && cmd.display.parameters.singularComplement) {\n            label = cmd.display.parameters.label;\n            singularComplement = cmd.display.parameters.singularComplement;\n          }\n          \n          lights.push({\n            id: cmd.id,\n            name: cmd.name,\n            order: cmd.order,\n            value: cmd.currentValue,\n            label: label,\n            singularComplement: singularComplement,\n          });\n        }\n      });\n\n      return {\n        loading: false,\n        error: false,\n        lights: lights,\n      };\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function allLightStatusRequested() {\n  return { type: LIGHT_ALL_STATUS_REQUESTED }\n}\nexport function allLightStatusLoaded(payload) {\n  return { type: LIGHT_ALL_STATUS_LOADED, payload: payload }\n}\nexport function allLightStatusErrored(e) {\n  return { type: LIGHT_ALL_STATUS_ERRORED, payload: e };\n}\n\nexport function allLightsOffRequested() {\n  return { type: LIGHT_ALL_OFF_REQUESTED }\n}\n\n// Side effects\nexport function* saga() {\n  yield takeEvery(LIGHT_ALL_STATUS_REQUESTED, lightStatusRequestSaga);\n  yield takeEvery(LIGHT_ALL_OFF_REQUESTED, lightAllOffRequestSaga);\n}\n\nfunction* lightStatusRequestSaga(action) {\n  try {\n    const payload = yield call(getJeedomEquipment, ALL_LIGHT_STATUS_ID);\n    yield put(allLightStatusLoaded(payload));\n  } catch (e) {\n    yield put(allLightStatusErrored(e));\n  }\n}\n\nfunction* lightAllOffRequestSaga() {\n  try {\n    yield call(execJeedomCmd, ALL_LIGHT_OFF_CMD);\n    yield delay(3 * 1000);\n    yield put(allLightStatusRequested());\n    yield put(summaryRequested());\n  } catch (e) {\n    yield put(showErrorSnackbar(\"Erreur lors de l'extinction des lumières !\"));\n  }\n}\n","import { takeEvery, call, put, putResolve } from 'redux-saga/effects';\nimport { getJeedomCommand, getJeedomCommandHistory } from '../utils/jeedom';\nimport { DateTime } from 'luxon';\n\n// Actions\nexport const DOOR_STATUS_WITH_HISTORY_REQUESTED = 'DOOR_STATUS_WITH_HISTORY_REQUESTED';\nexport const DOOR_STATUS_REQUESTED = 'DOOR_STATUS_REQUESTED';\nexport const DOOR_STATUS_LOADED = 'DOOR_STATUS_LOADED';\nexport const DOOR_STATUS_ERRORED = 'DOOR_STATUS_ERRORED';\nexport const DOOR_HISTORY_REQUESTED = 'DOOR_HISTORY_REQUESTED';\nexport const DOOR_HISTORY_LOADED = 'DOOR_HISTORY_LOADED';\nexport const DOOR_HISTORY_ERRORED = 'DOOR_HISTORY_ERRORED';\nexport const DOOR_HISTORY_SHOW = 'DOOR_HISTORY_SHOW';\nexport const DOOR_HISTORY_HIDE = 'DOOR_HISTORY_HIDE';\n\n// Reducer\nconst initialState = {\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case DOOR_STATUS_REQUESTED:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          loading: true,\n        }\n      };\n    \n    case DOOR_STATUS_ERRORED:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          loading: false,\n          error: true,\n        }\n      }\n\n    case DOOR_STATUS_LOADED:\n      const statusPayload = action.payload;\n\n      let label = statusPayload.name;\n      let singularComplement = 'de la';\n      if (statusPayload.display.parameters\n        && statusPayload.display.parameters.label\n        && statusPayload.display.parameters.singularComplement) {\n        label = statusPayload.display.parameters.label;\n        singularComplement = statusPayload.display.parameters.singularComplement;\n      }\n\n      return {\n        ...state,\n        [statusPayload.id]: {\n          id: statusPayload.id,\n          name: statusPayload.name,\n          order: statusPayload.order,\n          open: statusPayload.currentValue === 0 ? false : true,\n          label: label,\n          singularComplement: singularComplement,\n          loading: false,\n          error: false,\n        }\n      };\n\n      case DOOR_HISTORY_REQUESTED:\n        return {\n          ...state,\n          [action.payload.id]: {\n            ...state[action.payload.id],\n            loading: true,\n            error: false,\n          }\n        };\n      \n      case DOOR_HISTORY_ERRORED:\n          return {\n            ...state,\n            [action.payload.id]: {\n              ...state[action.payload.id],\n              loading: false,\n              error: true,\n            }\n          };\n\n      case DOOR_HISTORY_LOADED:\n        const history = action.payload.history.map(event => ({\n          datetime: DateTime.fromFormat(event.datetime, 'yyyy-MM-dd TT'),\n          open: event.value === '0' ? false : true,\n        })).sort((a, b) => b.datetime.diff(a.datetime));\n\n        return {\n          ...state,\n          [action.payload.id]: {\n            ...state[action.payload.id],\n            history: history,\n          }\n        }\n      \n      case DOOR_HISTORY_SHOW:\n        return {\n          ...state,\n          [action.payload.id]: {\n            ...state[action.payload.id],\n            showHistory: true,\n          }\n        };\n\n      case DOOR_HISTORY_HIDE:\n        return {\n          ...state,\n          [action.payload.id]: {\n            ...state[action.payload.id],\n            showHistory: false,\n          }\n        };\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function doorStatusWithHistoryRequested(payload) {\n  return { type: DOOR_STATUS_WITH_HISTORY_REQUESTED, payload: payload }\n}\nexport function doorStatusRequested(payload) {\n  return { type: DOOR_STATUS_REQUESTED, payload: payload }\n}\nexport function doorStatusLoaded(payload) {\n  return { type: DOOR_STATUS_LOADED, payload: payload }\n}\nexport function doorStatusErrored(payload) {\n  return { type: DOOR_STATUS_ERRORED, payload: payload }\n}\nexport function doorHistoryRequested(payload) {\n  return { type: DOOR_HISTORY_REQUESTED, payload: payload }\n}\nexport function doorHistoryLoaded(payload) {\n  return { type: DOOR_HISTORY_LOADED, payload: payload }\n}\nexport function doorHistoryErrored(payload) {\n  return { type: DOOR_HISTORY_ERRORED, payload: payload }\n}\nexport function doorHistoryShow(id) {\n  return { type: DOOR_HISTORY_SHOW, payload: { id: id } }\n}\nexport function doorHistoryHide(id) {\n  return { type: DOOR_HISTORY_HIDE, payload: { id: id } }\n}\n\n// Side effects\nexport function* saga() {\n  yield takeEvery(DOOR_STATUS_WITH_HISTORY_REQUESTED, doorStatusWithHistoryRequestSaga);\n  yield takeEvery(DOOR_STATUS_REQUESTED, doorStatusRequestSaga);\n  yield takeEvery(DOOR_HISTORY_REQUESTED, doorHistoryRequestSaga);\n}\n\nfunction* doorStatusWithHistoryRequestSaga(action) {\n  //yield fork(doorStatusRequestSaga, action);\n  //yield fork(doorHistoryRequestSaga, action);\n  yield putResolve(doorStatusRequested(action.payload));\n  yield putResolve(doorHistoryRequested(action.payload));\n}\n\nfunction* doorStatusRequestSaga(action) {\n  try {\n    const command = yield call(getJeedomCommand, action.payload.id);\n    yield put(doorStatusLoaded(command));\n  } catch (e) {\n    yield put(doorStatusErrored({\n      id: action.payload.id,\n      error: e,\n    }));\n  }\n}\n\nfunction* doorHistoryRequestSaga(action) {\n  try {\n    const history = yield call(getJeedomCommandHistory, action.payload.id);\n    const historyPayload = {\n      id: action.payload.id,\n      history: history,\n    }\n    yield put(doorHistoryLoaded(historyPayload));\n  } catch (e) {\n    yield put(doorHistoryErrored({\n      id: action.payload.id,\n      error: e,\n    }));\n  }\n}\n","import { takeEvery, call, put, delay } from 'redux-saga/effects';\nimport { getJeedomEquipment, execJeedomCmd } from '../utils/jeedom';\nimport { showErrorSnackbar } from './snackbar';\n\nconst REFRESH_DELAY = 1000;\n\n// Actions\nexport const MODE_LIST_REQUESTED = 'MODE_LIST_REQUESTED';\nexport const MODE_LIST_LOADED = 'MODE_LIST_LOADED';\nexport const MODE_LIST_ERRORED = 'MODE_LIST_ERRORED';\nexport const MODE_CHANGE_REQUESTED = 'MODE_CHANGE_REQUESTED';\nexport const MODE_CHANGE_SUCCEEDED = 'MODE_CHANGE_SUCCEEDED';\nexport const MODE_CHANGE_ERRORED = 'MODE_CHANGE_ERRORED';\n\n// Reducer\nconst initialState = {\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case MODE_LIST_REQUESTED:\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          loading: true,\n        }\n      }\n    \n    case MODE_LIST_ERRORED:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          loading: false,\n          error: true,\n        }\n      }\n\n    case MODE_LIST_LOADED:\n      const cmds = action.payload.cmds;\n      const currentModeValue = cmds.find(el => (el.logicalId === 'currentMode')).currentValue;\n\n      let modes = [];\n      cmds.forEach(cmd => {\n        if (cmd.isVisible === '1' && cmd.logicalId !== 'currentMode') {\n          modes.push({\n            id: cmd.id,\n            name: cmd.name,\n            order: cmd.order,\n          });\n        }\n      });\n\n      const currentMode = modes.find(mode => (mode.name === currentModeValue));\n\n      return {\n        ...state,\n        [action.payload.id]: {\n          currentMode: currentMode,\n          modes: modes,\n          loading: false,\n          error: false,\n        }\n      };\n    \n    case MODE_CHANGE_REQUESTED:\n      return {\n        ...state,\n        [action.payload.equipment]: {\n          ...state[action.payload.equipment],\n          loading: true,\n        }\n      }\n    \n    case MODE_CHANGE_SUCCEEDED:\n      return {\n        ...state,\n        [action.payload.equipment]: {\n          ...state[action.payload.equipment],\n          loading: false,\n          error: false,\n        }\n      }\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function modeListRequested(id) {\n  return { type: MODE_LIST_REQUESTED, id: id }\n}\nexport function modeListLoaded(payload) {\n  return { type: MODE_LIST_LOADED, payload: payload }\n}\nexport function modeListErrored(payload) {\n  return { type: MODE_LIST_ERRORED, payload: payload }\n}\nexport function modeChangeRequested(payload) {\n  return { type: MODE_CHANGE_REQUESTED, payload: payload }\n}\nexport function modeChangeSucceeded(payload) {\n  return { type: MODE_CHANGE_SUCCEEDED, payload: payload }\n}\nexport function modeChangeErrored(e) {\n  return { type: MODE_CHANGE_ERRORED, payload: e }\n}\n\n// Side effects\nexport function* saga() {\n  yield takeEvery(MODE_LIST_REQUESTED, modeListRequestSaga);\n  yield takeEvery(MODE_CHANGE_REQUESTED, modeChangeRequestSaga);\n}\n\nfunction* modeListRequestSaga(action) {\n  try {\n    const payload = yield call(getJeedomEquipment, action.id);\n    yield put(modeListLoaded(payload));\n  } catch (e) {\n    yield put(modeListErrored({\n      id: action.id,\n      error: e,\n    }));\n  }\n}\n\nfunction* modeChangeRequestSaga(action) {\n  try {\n    yield call(execJeedomCmd, action.payload.cmd);\n    yield delay(REFRESH_DELAY);\n    yield put(modeChangeSucceeded({\n      equipment: action.payload.equipment,\n      cmd: action.payload.cmd,\n    }));\n  } catch (e) {\n    yield put(modeChangeErrored(e));\n    yield put(showErrorSnackbar('Erreur lors du changement de mode !'));\n  } finally {\n    yield put(modeListRequested(action.payload.equipment));\n  }\n}\n","import { takeEvery, call, put } from 'redux-saga/effects';\nimport { getJeedomEquipment } from '../utils/jeedom';\n\n// Actions\nexport const THERMOSTAT_REQUESTED = 'THERMOSTAT_REQUESTED';\nexport const THERMOSTAT_LOADED = 'THERMOSTAT_LOADED';\nexport const THERMOSTAT_ERRORED = 'THERMOSTAT_ERRORED';\nexport const THERMOSTAT_MODE_CHANGE_REQUESTED = 'THERMOSTAT_MODE_CHANGE_REQUESTED';\n\n// Reducer\nconst initialState = {};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case THERMOSTAT_REQUESTED:\n      if (!action.id) {\n        return { ...state };\n      }\n\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          id: action.id,\n          loading: true,\n          error: false,\n        },\n      };\n\n    case THERMOSTAT_LOADED:\n      if (!action.payload.id || !action.payload.thermostat) {\n        return { ...state };\n      }\n\n      let loadedThermostat = action.payload.thermostat;\n      loadedThermostat.loading = false;\n      loadedThermostat.error = false;\n      return {\n        ...state,\n        [action.payload.id]: loadedThermostat,\n      };\n\n    case THERMOSTAT_ERRORED:\n      if (!action.payload.id) {\n        return { ...state };\n      }\n\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          id: action.payload.id,\n          loading: false,\n          error: true,\n        },\n      };\n\n    default: return state;\n  }\n}\n\n// Action Creators\nexport function thermostatRequested(id) {\n  return { type: THERMOSTAT_REQUESTED, id}\n}\nexport function thermostatLoaded(id, thermostat) {\n  return { type: THERMOSTAT_LOADED, payload: { id, thermostat } }\n}\nexport function thermostatErrored(id, error) {\n  return { type: THERMOSTAT_ERRORED, payload: { id, error } };\n}\nexport function thermostatModeChangeRequested(id, mode) {\n  return { type: THERMOSTAT_MODE_CHANGE_REQUESTED, payload: { id, mode } };\n}\n\n// Side effects\nexport function* saga() {\n  yield takeEvery(THERMOSTAT_REQUESTED, thermostatRequestSaga);\n}\n\nexport function* thermostatRequestSaga(action) {\n  try {\n    const thermostatId = action.id;\n\n    const equipment = yield call(getJeedomEquipment, thermostatId);\n\n    // Name\n    const thermostatName = equipment.name;\n    // Modes\n    const availableModes = equipment.cmds.filter(el => (\n      el.generic_type === 'THERMOSTAT_SET_MODE' && el.isVisible === '1'\n    ));\n    let thermostatModes = {};\n    availableModes.forEach(mode => thermostatModes[mode.id] = mode.name);\n    // Current mode\n    const currentMode = equipment.cmds.find(el => (\n      el.logicalId === 'mode'\n    ));\n    const thermostatCurrentMode = Object.keys(thermostatModes).find(key => thermostatModes[key] === currentMode.currentValue);\n    // Power\n    const thermostatPower = equipment.cmds.find(el => (\n      el.logicalId === 'power'\n    ));\n    // Temeprature\n    const thermostatTemperature = equipment.cmds.find(el => (\n      el.logicalId === 'temperature'\n    ));\n    // SetPoint\n    const thermostatSetPoint = equipment.cmds.find(el => (\n      el.logicalId === 'order'\n    ));\n\n    if (!thermostatName || !thermostatPower || !thermostatTemperature || !thermostatSetPoint) {\n      throw new TypeError('Error when parsing thermostat');\n    }\n\n    const thermostat = {\n      id: thermostatId,\n      name: thermostatName,\n      modes: thermostatModes,\n      currentMode: thermostatCurrentMode,\n      power: thermostatPower.currentValue,\n      temperature: thermostatTemperature.currentValue,\n      setpoint: thermostatSetPoint.currentValue,\n    }\n    yield put(thermostatLoaded(thermostatId, thermostat));\n  } catch (e) {\n    yield put(thermostatErrored(e));\n  }\n}\n","import { createStore, applyMiddleware, compose, combineReducers  } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { spawn } from 'redux-saga/effects';\n\nimport launchScreen, { saga as launchScreenSaga } from './modules/launchScreen';\nimport settingsForm, { saga as settingsFormSaga } from './modules/settingsForm';\nimport settings, { saga as settingsSaga }  from './modules/settings';\nimport snackbar, { saga as snackBarSaga } from './modules/snackbar';\nimport summary, { saga as summarySaga } from './modules/summary';\nimport room, { saga as roomSaga } from './modules/room';\nimport camera, { saga as cameraSaga } from './modules/camera';\nimport light, { saga as lightSaga } from './modules/light';\nimport door, { saga as doorSaga } from './modules/door';\nimport mode, { saga as modeSaga } from './modules/mode';\nimport thermostat, { saga as thermostatSaga } from './modules/thermostat';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  launchScreen,\n  settingsForm,\n  settings,\n  snackbar,\n  summary,\n  room,\n  camera,\n  light,\n  door,\n  mode,\n  thermostat,\n});\n\nfunction* rootSaga() {\n  yield spawn(launchScreenSaga);\n  yield spawn(settingsFormSaga);\n  yield spawn(settingsSaga);\n  yield spawn(snackBarSaga);\n  yield spawn(summarySaga);\n  yield spawn(roomSaga);\n  yield spawn(cameraSaga);\n  yield spawn(lightSaga);\n  yield spawn(doorSaga);\n  yield spawn(modeSaga);\n  yield spawn(thermostatSaga);\n}\n\nconst store = createStore(\n  rootReducer,\n  storeEnhancers(\n    applyMiddleware(sagaMiddleware)\n  )\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveSettingsForm } from '../../redux/modules/settingsForm';\nimport { getStorageSettings } from '../../redux/utils/storage';\n\nexport class SettingsForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {url: '', apikey: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    getStorageSettings().then((settings) => {\n      this.setState({\n        url: settings.url,\n        apikey: settings.apikey,\n      })\n    });\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.saveSettingsForm({\n      url: this.state.url,\n      apikey: this.state.apikey,\n      onSuccess: this.props.onSuccess,\n    });\n  }\n\n  render() {\n    const errorCheck = this.props.checkFailed ?\n      <div className=\"alert alert-danger\" role=\"alert\">URL ou Clef d'API invalide !</div>\n      : '';\n    const errorSave = this.props.saveFailed ?\n      <div className=\"alert alert-danger\" role=\"alert\">Erreur lors de la sauvegarde !</div>\n      : '';\n    \n    const button = this.props.saveRequested ?\n      <button type=\"button\" className=\"btn btn-secondary btn-lg btn-block\" disabled>Enregistrement</button>\n      : <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">Sauvegarder</button>\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"url\">Jeedom URL</label>\n          <input type=\"text\" className=\"form-control\" id=\"url\" value={this.state.url} onChange={this.handleChange} />\n          <small className=\"form-text text-muted\">URL publique d'accès à Jeedom.</small>\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"apikey\">Clef d'API Jeedom</label>\n          <input type=\"text\" className=\"form-control\" id=\"apikey\" value={this.state.apikey} onChange={this.handleChange} />\n          <small className=\"form-text text-muted\">Configuration > API > Clef API</small>\n        </div>\n\n        {errorCheck}\n        {errorSave}\n\n        {button}\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { settingsForm } = state;\n\n  return settingsForm;\n}\n\nexport default connect(\n  mapStateToProps,\n  { saveSettingsForm },\n)(SettingsForm);\n","import React from 'react';\nimport SettingsForm from '../../containers/SettingsForm/SettingsForm';\n\nimport loaderSvg from './loader.svg';\nimport './LaunchScreen.scss';\n\nfunction LaunchScreen(props) {\n  const loader = !props.showSetup ?\n      <img className=\"loader\" src={loaderSvg} width=\"50\" alt=\"\" />\n      : '';\n    \n  const settingsForm = props.showSetup ?\n    <SettingsForm onSuccess=\"props.onSuccess\" />\n    : '';\n\n  return (\n    <div className=\"launchScreen position-fixed\">\n      <div className=\"container fixed-bottom\">\n        <h1>Bienvenue,</h1>\n        { loader }\n        { settingsForm }\n      </div>\n    </div>\n  )\n};\n\nexport default LaunchScreen;\n","import React from 'react';\nimport './Pill.scss';\n\nfunction Pill(props) {\n  const pillImageUrl = props.image;\n  let pillImage = '';\n  if (pillImageUrl) {\n    const pillImgStyle = {\n      backgroundImage: 'url(' + pillImageUrl + ')'\n    };\n    let pillClassName = ['pill-img'];\n    if (props.text) {\n      pillClassName.push('pill-img-with-text');\n    }\n    else {\n      pillClassName.push('pill-img-no-text');\n    }\n\n    pillImage = <span className={pillClassName.join(' ')} style={pillImgStyle}>&nbsp;</span>;\n  }\n  \n  return (\n    <span>\n      <span className=\"pill\">\n        {pillImage}\n        {props.text}\n      </span>&nbsp;\n    </span>\n  );\n}\n\nexport default Pill;\n","import React from 'react';\nimport Pill from '../Pill/Pill';\nimport imgSun from './sun.svg';\nimport imgRain from './rain.svg';\nimport imgLight from './light.svg';\n\nfunction Summary(props) {\n  const outsideImage = props.summary.outsideRain > 0 ? imgRain : imgSun;\n  const light = props.summary.light ? <Pill image={imgLight} /> : '';\n\n  return (\n    <h5 className=\"house-summary\">\n      <Pill text={props.summary.homeTemperature + '°'} />\n      <Pill image={outsideImage} text={props.summary.outsideTemperature + '°'} />\n      {light}\n    </h5>\n  );\n}\n\nexport default Summary;","import React from 'react';\nimport './Header.scss';\nimport Summary from '../Summary/Summary';\n\nfunction Header(props) {\n  const collapsedClassName = props.collapsed ? ' app-header-collapsed' : '';\n\n  return (\n    <header className={\"app-header\" + collapsedClassName}>\n      <div className=\"container\">\n        <a href=\"#Settings\" className=\"settings-show text-hide\" onClick={props.onShowSettings}>Paramètres</a>\n\n        <h1>Salut,</h1>\n        <h3>Tout va bien à la maison</h3>\n        <Summary summary={props.summary} />\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './Card.scss';\n\nfunction Card(props) {\n  const cssClass = ['card'];\n  if (props.error) {\n    cssClass.push('border-danger');\n  }\n\n  const style = {\n    backgroundImage: 'url(' + props.backgroundUrl + ')',\n    backgroundSize: 'cover',\n  };\n\n  const imgTop = props.imgTop ?\n    <img className='card-img-top' src={props.imgTop} alt='' />\n    : '';\n  const imgBottom = props.imgBottom ?\n    <img className='card-img-top' src={props.imgBottom} alt='' />\n    : '';\n  \n  const overlay = props.overlay ? \n    <div className=\"card-img-overlay\"><p className=\"card-text text-center\">{props.overlay}</p></div>\n    : '';\n\n  const hasChildren = props.children ? 'has-children' : 'no-child';\n\n  return (\n    <div className={cssClass.join(' ')} style={style}>\n      {imgTop}\n      {overlay}\n      <div className=\"card-body\">\n        <h5 className={'card-title ' + hasChildren}>{props.title}</h5>\n        {props.children}\n      </div>\n      {imgBottom}\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport Card from '../Card/Card';\n\nexport class CardCamera extends Component {\n  constructor() {\n    super();\n    this.state = {\n      time: Date.now()\n    };\n  }\n\n  componentDidMount() {\n    //setInterval(() => this.setState({ time: Date.now() }), 10000);\n  }\n\n  render() {\n    return (\n      <Card\n        title={this.props.title}\n        imgTop={this.props.cameraImage + '&time=' + this.state.time}\n        overlay={this.props.overlay}>\n        {this.props.children}\n      </Card>\n    )\n  }\n}\n\nexport default CardCamera;\n","import React, { Component } from 'react';\nimport './Backdrop.scss';\n\nexport class Backdrop extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false\n    };\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({show: true})\n    }, 1);\n  }\n\n  handleClose(event) {\n    event.preventDefault();\n    this.setState({show: false});\n    if (this.props.onClose) {\n      setTimeout(() => {\n        this.props.onClose();\n      }, 350);\n    }\n  }\n\n  render() {\n    const cssClass = this.state.show ? ' backdrop-show' : ' backdrop-hide';\n\n    return (\n      <div className={'backdrop settings-backdrop ' + cssClass}>\n        <div className=\"backdrop-background\" onClick={this.handleClose}></div>\n        <div className=\"backdrop-wrapper\">\n          <div className=\"container\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-12 col-lg-10 col-xl-9 backdrop-content\">\n                <h3>{this.props.title}</h3>\n                <a href=\"#App\" className=\"backdrop-close text-hide\" onClick={this.handleClose}>Fermer</a>\n                <hr/>\n                <div className=\"backdrop-content-scroll\">\n                  {this.props.children}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backdrop;\n","import React from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\n\nfunction formatHistoryListItem(element, i) {\n  const badgeClassName = element.open ? 'badge-danger' : 'badge-success';\n\n  return (\n    <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={i}>\n      {element.datetime.toFormat('dd/LL/yyyy HH:mm:ss')}\n      <span className={\"badge badge-pill \" + badgeClassName}>\n        {element.open ? 'Ouvert' : 'Fermé'}\n      </span>\n    </li>\n  );\n}\n\nfunction BackdropDoorHistory(props) {\n  if (!props.history) {\n    return '';\n  }\n\n  const historyList = props.history.slice(0, 15).map(formatHistoryListItem);\n\n  return (\n    props.show ?\n      <Backdrop title={props.title} onClose={props.onClose}>\n        <p>15 derniers évènements :</p>\n        <ul className=\"list-group list-group-flush\">\n          {historyList}\n        </ul>\n      </Backdrop>\n    : ''\n  );\n}\n\nexport default BackdropDoorHistory;\n","export function formatDoorDate(object, door) {\n  if (!door) {\n    return object + ' est dans un état indéterminée';\n  }\n\n  const status = door.open ? 'ouvert' : 'fermé';\n\n  if (!door.history || door.history.length === 0) {\n    return object + ' est ' + status + ' depuis une période indéterminée';\n  }\n  \n  let duration;\n  let diff = door.history[0].datetime.diffNow().negate();\n  if (diff.toFormat('d') > 1) {\n    duration = diff.toFormat('d') +' jours';\n  } else if (diff.toFormat('d') > 0) {\n    duration = '1 jour';\n  } else if (diff.toFormat('h') > 1) {\n    duration = diff.toFormat('h') + ' heures';\n  } else if (diff.toFormat('h') > 0) {\n    duration = '1 heure';\n  } else if (diff.toFormat('m') > 1) {\n    duration = diff.toFormat('m') + ' minutes';\n  } else if (diff.toFormat('m') > 0) {\n    duration = '1 minute';\n  } else {\n    duration = \"moins d'une minute\";\n  }\n\n  return object + ' est ' + status + ' depuis ' + duration + '.';\n}","import React from 'react';\nimport CardCamera from '../CardCamera/CardCamera';\nimport BackdropDoorHistory from '../BackdropDoorHistory/BackdropDoorHistory';\nimport { formatDoorDate } from '../utils';\n\nfunction CardCameraGarage(props) {\n  const status = formatDoorDate('Le garage', props.door);\n\n  const overlay = props.door && props.door.loading ? 'Chargement...' : '';\n\n  return (\n    <CardCamera\n      title=\"Garage\"\n      cameraImage={props.cameraImage}\n      overlay={overlay}>\n      <p className=\"card-text\">{status}</p>\n      <div className=\"text-right\">\n        {props.onHistoryClick ? <button className=\"btn btn-link\" onClick={props.onHistoryClick}>Historique</button> : ''}\n        <button className=\"btn btn-primary\">Actioner</button>\n      </div>\n\n      <BackdropDoorHistory\n        title=\"Historique\"\n        show={props.door && props.door.showHistory}\n        onClose={props.onHistoryBackdropClose}\n        history={props.door && props.door.history ? props.door.history : null} />\n    </CardCamera>\n  );\n}\n\nexport default CardCameraGarage;\n","import React from 'react';\nimport Card from '../Card/Card';\nimport BackdropDoorHistory from '../BackdropDoorHistory/BackdropDoorHistory';\nimport { formatDoorDate } from '../utils';\n\nfunction CardDoor(props) {\n  const overlay = props.door && props.door.loading ? 'Chargement...' : '';\n  const status = formatDoorDate('La porte', props.door);\n\n  return (\n    <Card\n      title={props.title}\n      overlay={overlay}>\n      <p className=\"card-text\">{status}</p>\n      <div className=\"text-right\">\n        {props.onHistoryClick ? <button className=\"btn btn-link\" onClick={props.onHistoryClick}>Historique</button> : ''}\n      </div>\n\n      <BackdropDoorHistory\n        title=\"Historique\"\n        show={props.door && props.door.showHistory}\n        onClose={props.onHistoryBackdropClose}\n        history={props.door && props.door.history ? props.door.history : null} />\n    </Card>\n  );\n}\n\nexport default CardDoor;\n","import React from 'react';\nimport Card from '../Card/Card';\n\nfunction CardLights(props) {\n  const lightsOn = props.lights.filter((light) => (light.value === 1));\n  \n  let text = 'Le statut des lumières est indéterminé !';\n\n  if (lightsOn.length === 0) {\n    text = 'Toutes les lumières sont éteintes.';\n  }\n  if (lightsOn.length === 1) {\n    text = 'La lumière ' + lightsOn[0].singularComplement + ' ' + lightsOn[0].label + ' est allumée.';\n  }\n  if (lightsOn.length > 1) {\n    text = 'Les lumières ' + lightsOn.reduce((labels, item) => labels + item.label + ', ', '') + ' sont allumées.';\n  }\n\n  const overlay = props.loading ? 'Chargement...' : '';\n\n  if (props.error) {\n    return (\n      <Card title={props.title} error overlay={overlay}>\n        <p className=\"card-text\">Oups une erreur est survenue dans la récupération de l'état des lumières !</p>\n        <div className=\"text-right\">\n          <button className=\"btn btn-primary\" onClick={props.onRetry}>Ré-essayer</button>\n        </div>\n      </Card>\n    )\n  }\n\n  return (\n    <Card title=\"Lumières\" overlay={overlay}>\n      <p className=\"card-text\">{text}</p>\n      <div className=\"text-right\">\n        <button className=\"btn btn-primary\" onClick={props.onOffClick}>Tout éteindre</button>\n      </div>\n    </Card>\n  );\n}\n\nexport default CardLights;\n","import React from 'react';\nimport Card from '../Card/Card';\n\nfunction CardMode(props) {\n  const parsePropMode = (propString) => ({\n    id: propString.split('|')[0],\n    name: propString.split('|')[1],\n  });\n\n  const currentMode = parsePropMode(props.currentMode);\n\n  const modes = props.modes.split('##').map(mode => {\n    const {id, name} = parsePropMode(mode);\n    const disabled = id === currentMode.id;\n\n    const onClick = (e) => {\n      e.preventDefault();\n      const payload = {\n        equipment: props.equipment,\n        cmd: id,\n      };\n      props.onModeClick(payload);\n    }\n\n    return (<button\n      type=\"button\"\n      className=\"btn btn-primary\"\n      onClick={onClick}\n      disabled={disabled}\n      key={id}>\n      {name}\n    </button>)\n    });\n\n  const overlay = props.loading ? 'Chargement...' : '';\n\n  if (props.error) {\n    return (\n      <Card title={props.title} error overlay={overlay}>\n        <p className=\"card-text\">Oups une erreur est survenue dans la récupération des modes !</p>\n        <div className=\"text-right\">\n          <button className=\"btn btn-primary\" onClick={props.onRetry}>Ré-essayer</button>\n        </div>\n      </Card>\n    )\n  }\n\n  return (\n    <Card title={props.title} overlay={overlay}>\n      <p className=\"card-text\">Actuellement en mode <strong>{currentMode.name}</strong>.</p>\n      <div className=\"text-center\">\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Modes\">\n          {modes}\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default CardMode;\n","import React from 'react';\nimport Card from '../Card/Card';\n\nfunction CardThermostat(props) {\n  if (!props.thermostat) {\n    return '';\n  }\n\n  const overlay = props.thermostat.loading ? 'Chargement...' : '';\n\n  const thermostatId = props.thermostat.id;\n\n  let thermostat = '';\n  if (props.thermostat.modes) {\n    const modesCount = Object.entries(props.thermostat.modes).length;\n\n    let datalistOptions = [];\n    const optionSize = Math.floor(12 / modesCount);\n    for (let [key, value] of Object.entries(props.thermostat.modes)) {\n      datalistOptions.push(<option className={'col-' + optionSize} value={key} label={value} key={key} />);\n    }\n\n    const currentModeIndex = Object.getOwnPropertyNames(props.thermostat.modes).indexOf(props.thermostat.currentMode);\n    \n    const thermostatPower = props.thermostat.power > 0 ? <small>({props.thermostat.power} %)</small> : ''\n\n    const handleOnChange = (e) => {\n      e.preventDefault();\n      const step = e.target.value;\n      const modeId = Object.keys(props.thermostat.modes)[step];\n      \n      props.onModeChange({\n        id: thermostatId,\n        mode: modeId,\n      });\n    }\n    \n    thermostat = <div>\n      <hr />\n      <div className=\"form-group text-center\">\n        <label htmlFor={'thermostat-'+ thermostatId}>Thermostat {thermostatPower}</label>\n        <datalist id={'thermostat-marks-'+ thermostatId} className=\"row text-center\">\n          {datalistOptions}\n        </datalist>\n        <input\n          type=\"range\"\n          className=\"custom-range\"\n          id={'thermostat-'+ thermostatId}\n          min=\"0\"\n          max={modesCount - 1}\n          step=\"1\"\n          defaultValue={currentModeIndex}\n          list={'thermostat-marks-'+ thermostatId}\n          onChange={handleOnChange} />\n      </div>\n    </div>\n  }\n\n  return (\n    <Card title={props.title} overlay={overlay}>\n      <div className=\"row align-items-center\">\n        <div className=\"col-5 order-12 text-center\">\n          <h2>{props.thermostat.temperature}°</h2>\n          <small>Historique</small>\n        </div>\n        <ul className=\"col-7 order-1 list-unstyled\">\n          <li>Humidité : 23%</li>\n          <li>CO2: 443ppm</li>\n          <li>Bruit: 38dB</li>\n        </ul>\n      </div>\n      {thermostat}\n    </Card>\n  );\n}\n\nexport default CardThermostat;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport CardCamera from '../../components/CardCamera/CardCamera';\nimport CardCameraGarage from '../../components/CardCameraGarage/CardCameraGarage';\nimport CardDoor from '../../components/CardDoor/CardDoor';\nimport CardLight from '../../components/CardLights/CardLights';\nimport CardMode from '../../components/CardMode/CardMode';\nimport CardThermostat from '../../components/CardThermostat/CardThermostat';\nimport { allLightStatusRequested, allLightsOffRequested } from '../../redux/modules/light';\nimport { doorStatusWithHistoryRequested, doorHistoryShow, doorHistoryHide } from '../../redux/modules/door';\nimport { modeListRequested, modeChangeRequested } from \"../../redux/modules/mode\";\nimport { HOUSE_MODE_ID, LIVING_CAMERA_ID, GARAGE_CAMERA_ID, LIVING_THERMOSTAT_ID } from '../../constants/equipments';\nimport { GARAGE_DOOR_CMD, ENTRY_DOOR_CMD } from '../../constants/commands';\nimport { cameraImageRequested } from '../../redux/modules/camera';\nimport { thermostatRequested, thermostatModeChangeRequested } from '../../redux/modules/thermostat';\n\nexport class CardList extends Component {\n  constructor() {\n    super();\n\n    this.handleHouseModeRetry = this.handleHouseModeRetry.bind(this);\n    this.handleLightStatusRetry = this.handleLightStatusRetry.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getAllLightStatus();\n    this.props.getDoorStatusHistory({id: GARAGE_DOOR_CMD});\n    this.props.getDoorStatusHistory({id: ENTRY_DOOR_CMD});\n    this.props.getCameraImage(GARAGE_CAMERA_ID);\n    this.props.getCameraImage(LIVING_CAMERA_ID);\n    this.props.getMode(HOUSE_MODE_ID);\n    this.props.getThermostat(LIVING_THERMOSTAT_ID);\n  }\n\n  handleHouseModeRetry() {\n    this.props.getMode(HOUSE_MODE_ID);\n  }\n\n  handleLightStatusRetry() {\n    this.props.getAllLightStatus();\n  }\n\n  formatModeToProps(mode) {\n    return '' + mode.id + '|' + mode.name\n  };\n  getCurrentMode(modeState) {\n    if (!modeState || !modeState.currentMode) {\n      return '|...';\n    }\n  \n    return this.formatModeToProps(modeState.currentMode)\n  }\n  getModes(modeState) {\n    if (!modeState || !modeState.modes) {\n      return '|...';\n    }\n  \n    return modeState.modes.map(this.formatModeToProps).join('##');\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"card-columns\">\n          <CardLight\n            error={this.props.lights.error}\n            loading={this.props.lights.loading}\n            lights={this.props.lights.lights}\n            onOffClick={this.props.handleLightOffClick}\n            onRetry={this.handleLightStatusRetry} />\n\n          <CardCameraGarage\n            title=\"Garage\"\n            cameraImage={this.props.garageCameraImage}\n            door={this.props.garageDoor}\n            onHistoryClick={() => { this.props.handleDoorHistoryClick(GARAGE_DOOR_CMD) }}\n            onHistoryBackdropClose={() => { this.props.handleHistoryBackdropClose(GARAGE_DOOR_CMD)}} />\n          \n          <CardDoor\n            title=\"Entrée\"\n            door={this.props.enrtyDoor}\n            onHistoryClick={() => { this.props.handleDoorHistoryClick(ENTRY_DOOR_CMD) }}\n            onHistoryBackdropClose={() => { this.props.handleHistoryBackdropClose(ENTRY_DOOR_CMD)}} />\n\n          <CardCamera\n            title=\"Séjour\"\n            cameraImage={this.props.livingCameraImage} />\n\n          <CardMode\n            title=\"Maison\"\n            loading={this.props.houseMode ? this.props.houseMode.loading : false}\n            error={this.props.houseMode ? this.props.houseMode.error : false}\n            equipment={HOUSE_MODE_ID}\n            currentMode={this.getCurrentMode(this.props.houseMode)}\n            modes={this.getModes(this.props.houseMode)}\n            onModeClick={this.props.handleChangeMode}\n            onRetry={this.handleHouseModeRetry} />\n          \n          <CardThermostat\n            title=\"Environnement\"\n            thermostat={this.props.livingThermostat}\n            onModeChange={this.props.handleThermostatModeChange} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  lights: state.light,\n  garageDoor: state.door[GARAGE_DOOR_CMD],\n  enrtyDoor: state.door[ENTRY_DOOR_CMD],\n  garageCameraImage: state.camera[GARAGE_CAMERA_ID],\n  livingCameraImage: state.camera[LIVING_CAMERA_ID],\n  houseMode: state.mode[HOUSE_MODE_ID],\n  livingThermostat: state.thermostat[LIVING_THERMOSTAT_ID]\n});\n\nconst mapDispatchToProps = {\n  getAllLightStatus: allLightStatusRequested,\n  getDoorStatusHistory: doorStatusWithHistoryRequested,\n  handleDoorHistoryClick: doorHistoryShow,\n  handleHistoryBackdropClose: doorHistoryHide,\n  handleLightOffClick: allLightsOffRequested,\n  getCameraImage: cameraImageRequested,\n  getMode: modeListRequested,\n  handleChangeMode: modeChangeRequested,\n  getThermostat: thermostatRequested,\n  handleThermostatModeChange: thermostatModeChangeRequested,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardList);\n","import React from 'react';\nimport './Room.scss';\n\nfunction Room(props) {\n  return (\n    <div className=\"col-6 col-md-4 col-lg-3\">\n      <div className=\"card room\">\n        {props.name}\n      </div>\n    </div>\n  );\n}\n\nexport default Room;\n","import React from 'react';\nimport Room from '../Room/Room';\nimport './RoomList.scss';\n\nfunction RoomList(props) {\n  const error = props.error ?\n    <div className=\"alert alert-danger\" role=\"alert\">\n      Erreur lors de la récupération des pièces\n      <button type=\"button\" className=\"btn btn-link\" onClick={props.getRooms}>Réessayer</button>\n    </div>\n    : '';\n  const loading = props.loading ?\n    <div className=\"alert alert-light\" role=\"alert\">Récupération des pièces...</div>\n    : '';\n  const empty = (props.rooms.length === 0 && !props.error && !props.loading) ?\n    <div className=\"alert alert-info\" role=\"alert\">Aucune pièce de défini</div>\n    : '';\n  const list = (props.rooms.length > 0 && !props.error && !props.loading) ?\n    <div className=\"row\">\n      {props.rooms.map(room => (\n        <Room key={room.id} name={room.name} />\n      ))}\n    </div>\n    : '';\n    \n  return (\n    <div className=\"room-list-container\">\n      <div className=\"container\">\n        <div className=\"row room-list\">\n          <div className=\"col-12\">\n            <h3>Pièces</h3>\n            {loading}\n            {error}\n            {empty}\n            {list}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RoomList;\n","import React from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport SettingsForm from '../../containers/SettingsForm/SettingsForm';\n\nfunction BackdropSettings(props) {\n  return (\n    props.show ?\n      <Backdrop title=\"Paramètres\" onClose={props.onClose}>\n        <SettingsForm onSuccess={props.onSuccess} />\n      </Backdrop>\n    : ''\n  );\n}\n\nexport default BackdropSettings;\n","import React from 'react';\nimport './Snackbar.scss';\n\nfunction Snackbar(props) {\n  const cssClass = props.text ? ' snackbar-show' : ' snackbar-hide';\n\n  return (\n    <div className={'container snackbar-container ' + cssClass}>\n      <div className=\"row\">\n        <div className=\"col-12 fixed-bottom\">\n          <div className={'snackbar alert alert-' + props.type} role=\"alert\">\n            {props.text}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Snackbar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { showSettings, hideSettings, settingsFormSucceeded } from \"../../redux/modules/settings\";\nimport { appLaunchRequested, appLaunchSucceeded } from \"../../redux/modules/launchScreen\";\nimport { setSummaryIntervalRegistration } from \"../../redux/modules/summary\";\nimport { roomsRequested } from \"../../redux/modules/room\";\n\nimport LaunchScreen from '../../components/LaunchScreen/LaunchScreen';\nimport Header from '../../components/Header/Header';\nimport CardList from '../CardList/CardList';\nimport RoomList from '../../components/RoomList/RoomList';\nimport BackdropSettings from '../../components/BackdropSettings/BackdropSettings';\nimport Snackbar from '../../components/Snackbar/Snackbar';\n\nimport './App.scss';\n\nexport class App extends Component {\n  constructor() {\n    super();\n\n    this.state ={\n      collapsedHeader: false,\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  handleScroll(e) {\n    const threshold = 10.65 * parseFloat(getComputedStyle(document.documentElement).fontSize);\n\n    this.setState({collapsedHeader: window.scrollY > threshold});\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n    this.props.appLaunchRequested();\n    this.props.setSummaryIntervalRegistration();\n    this.props.getRooms();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    if (this.props.launchScreen.show) {\n      return (\n        <div className=\"App\" id=\"App\">\n          <LaunchScreen\n            showSetup={this.props.launchScreen.showSetup}\n            onSuccess={this.props.handleLaunchScreenSetupSuccess} />\n        </div>)\n    }\n\n    return (\n      <div className=\"App\" id=\"App\">\n        <Header \n          collapsed={this.state.collapsedHeader}\n          onShowSettings={this.props.handleShowSettings}\n          summary={this.props.summary} />\n\n        <CardList />\n\n        <RoomList\n          rooms={this.props.rooms.list}\n          loading={this.props.rooms.loading}\n          error={this.props.rooms.error} />\n        \n        <BackdropSettings\n          show={this.props.showSettingsBackdrop}\n          onClose={this.props.handleCloseSettings}\n          onSuccess={this.props.handleSettingsBackdropFormSuccess} />\n\n        <Snackbar text={this.props.snackbar.text} type={this.props.snackbar.type} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  launchScreen: state.launchScreen,\n  showSettingsBackdrop: state.settings.show,\n  summary: state.summary,\n  rooms: state.room,\n  snackbar: state.snackbar,\n});\n\nconst mapDispatchToProps = {\n  appLaunchRequested: appLaunchRequested,\n  handleShowSettings: showSettings,\n  handleCloseSettings: hideSettings,\n  handleLaunchScreenSetupSuccess: appLaunchSucceeded,\n  handleSettingsBackdropFormSuccess: settingsFormSucceeded,\n  setSummaryIntervalRegistration: setSummaryIntervalRegistration,\n  getRooms: roomsRequested,\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n//import store from './store/index';\nimport store from './redux/configureStore';\nimport './index.scss';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}