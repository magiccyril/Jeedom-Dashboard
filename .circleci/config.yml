version: 2 # use CircleCI 2.0
jobs:
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout # special step to check out source code to working directory

      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys: 
            - v1-repo-{{ checksum "package-lock.json" }}

      - run:
          name: Install dependencies with NPM
          command: npm install

      - save_cache: # special step to save the dependency cache
          key: v1-repo-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"

      - run:
          name: Run tests
          # Runs jest with "--maxWorkers=2" argument to avoid OOM issues
          command: npm test

      - store_artifacts: 
          path: test-results

      - store_test_results:
          path: test-results

  deploy:
    docker:
      - image: circleci/node:10
    steps:
      - add_ssh_keys:
          fingerprints:
            - "db:e3:c8:a2:f8:d2:48:81:72:b6:2d:e9:6b:b7:95:30"
      
      - checkout # special step to check out source code to working directory

      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys: 
            - v1-repo-{{ checksum "package-lock.json" }}
          
      - run:
          name: Install dependencies with NPM
          command: npm install

      - save_cache: # special step to save the dependency cache
          key: v1-repo-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"

      - run:
            name: Deploy
            command: |
              git config user.email "magiccyril@gmail.com"
              git config user.name "Cyril G."
              npm run deploy


workflows:
  version: 2
  Test and Deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master